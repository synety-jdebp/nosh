#!/usr/bin/make -sf

.PHONY: build binary install clean stage control

BINARY_PACKAGES=guide exec terminal-management service-management terminal-extras zsh-completion service-command-shim systemv-shims systemd-shims upstart-shims execline-shims core-shims debian-shims bsd-shims openbsd-shims freebsd-shims ucspi-tcp-shims kbd-shims logrotate-shims bundles run-system-manager run-via-systemd run-debian-desktop-base run-debian-server-base run-kernel-vt run-user-vt run-virtualbox-guest run-freedesktop-system-bus run-freedesktop-kits run-openssh-server run-appletalk run-systemd-udev run-udev run-busybox-mdev run-suckless-mdev run-vdev run-local-syslog run-klog

# The Debian package builder targets this in order to make the package contents.
build:
	package/compile

# The Debian package builder targets this in order to clean the build areas.
clean:
	${RM} debian/files debian/substvars
	for i in ${BINARY_PACKAGES} ; \
	do \
		${RM} -r debian/nosh-"$$i"/ || exit 1 ; \
	done
	${RM} -r debian/tmp/

# The Debian package builder targets this in order to make the .deb files.
binary: stage control
	for i in ${BINARY_PACKAGES} ; \
	do \
		dpkg -b debian/nosh-"$$i" ../ || exit 1 ; \
	done

stage:
	echo 1>&2 "Copying slashpackage image."
	install -d -m 0755 debian/tmp
	pax -r -w -l command config guide manual debian/tmp/
	echo 1>&2 "Staging from debian/tmp/"
	package/stage debian/tmp debian

control:
	${RM} debian/files
	for i in ${BINARY_PACKAGES} ; \
	do \
		echo 1>&2 "Building control file for nosh-$$i." ; \
		debian/gencontrol nosh-"$$i" debian/nosh-"$$i" || exit 1 ; \
	done
